<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="$(SolutionDir)\Patcher\Prism.Build.props" Condition="Exists('$(SolutionDir)\Patcher\Prism.Build.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{FA53DC38-9B2B-45D3-818E-3E60F69143F6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Prism.Injector</RootNamespace>
    <AssemblyName>Prism.Injector</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>5</LangVersion>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>5</LangVersion>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationIcon>..\res\Icons\PrismIcon_Misc.ico</ApplicationIcon>
  </PropertyGroup>
  <ItemGroup Condition="'$(OS)' != 'Unix'">
    <Reference Condition="'$(OS)' != 'Unix'" Include="Microsoft.Xna.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553, processorArchitecture=x86" />
    <Reference Condition="'$(OS)' != 'Unix'" Include="Microsoft.Xna.Framework.Game, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553, processorArchitecture=x86" />
    <Reference Condition="'$(OS)' != 'Unix'" Include="Microsoft.Xna.Framework.Graphics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553, processorArchitecture=x86" />
    <Reference Condition="'$(OS)' != 'Unix'" Include="Microsoft.Xna.Framework.Xact, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553, processorArchitecture=x86" />
    <Reference Condition="'$(OS)' != 'Unix'" Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="dnlib">
      <HintPath>..\References\dnlib.dll</HintPath>
    </Reference>
    <Reference Include="FNA" Condition="'$(OS)' == 'Unix'">
      <HintPath>../References/FNA.dll</HintPath>
    </Reference>
    <Reference Include="WindowsBase" Condition="'$(OS)' == 'Unix'">
      <HintPath>../References/WindowsBase.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>../References/Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="Steamworks.NET">
      <HintPath>../References/Steamworks.NET.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Ionic.Zip.CF">
      <HintPath>..\References\Ionic.Zip.CF.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\GlobalSuppressions.cs">
      <Link>Properties\GlobalSuppressions.cs</Link>
    </Compile>
    <Compile Include="..\LinqExt.cs">
      <Link>LinqExt.cs</Link>
    </Compile>
    <Compile Include="..\SharedAssemblyInfo.cs">
      <Link>Properties\SharedAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="DNContext.cs" />
    <Compile Include="DNReflectionComparer.cs" />
    <Compile Include="Patcher\ILProcessor.cs" />
    <Compile Include="Patcher\BuffPatcher.cs" />
    <Compile Include="Patcher\DNHelperExtensions.cs" />
    <Compile Include="MemberResolver.cs" />
    <Compile Include="MemberResolverExtensions.cs" />
    <Compile Include="Patcher\MainPatcher.cs" />
    <Compile Include="Patcher\MountPatcher.cs" />
    <Compile Include="Patcher\PlayerPatcher.cs" />
    <Compile Include="Patcher\ProjectilePatcher.cs" />
    <Compile Include="Patcher\ItemPatcher.cs" />
    <Compile Include="Patcher\LangPatcher.cs" />
    <Compile Include="Patcher\NpcPatcher.cs" />
    <Compile Include="Patcher\RecipePatcher.cs" />
    <Compile Include="Patcher\TerrariaPatcher.cs" />
    <Compile Include="Patcher\TilePatcher.cs" />
    <Compile Include="Patcher\WorldFilePatcher.cs" />
    <Compile Include="Patcher\WrapperHelperExtensions.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="..\res\Icons\PrismIcon_Misc.ico" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup Condition="'$(OS)' == 'Unix'">
    <PostBuildEvent Condition="'$(OS)' == 'Unix'">
      if ! [ -e "$(ProjectDir)../References/ReLogic.dll" ] || ! [ -e "$(ProjectDir)/../References/Steamworks.NET.dll" ]; then
        if ! [ -e "$(ProjectDir)../References/Terraria.exe" ]; then
          echo "Terraria.exe is missing in the References folder. Please put it there."
          exit 1
          fi

        cd "$(ProjectDir)../Patcher/ExtractReLogic"
        ./c.sh
        mono bin/ExtractReLogic.exe "$(ProjectDir)../References/Terraria.exe" "$(ProjectDir)../References"
      fi
    </PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
    <PostBuildEvent Condition="'$(OS)' == 'Windows_NT'">
      echo TODO: someone: write this
      exit 1
    </PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>
